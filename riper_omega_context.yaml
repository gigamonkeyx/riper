---
# RIPER-Œ© System Context for Qwen2.5
# Comprehensive context to prevent misinterpretation of terms and tasks

system_name: "RIPER-Œ©"
version: "2.6"
description: "Rural Infrastructure Production Economic Resilience - Omega Protocol"

# Core System Components
components:
  evolution:
    name: "Evolutionary Algorithms"
    description: "Neural network evolution using genetic algorithms"
    abbreviations: ["evo", "evolution", "evolutionary"]
    not_confused_with: ["EVE Online", "video games", "gaming"]
    purpose: "Optimize agent behavior through fitness-based selection"
    
  agents:
    observer: "Monitors system state and coordinates evolution"
    builder: "Executes tasks and implements solutions"
    sub_agents: 18
    communication: "Agent-to-Agent (A2A) messaging protocol"
    
  workflows:
    bakery_production:
      - name: "Meat Production"
        cycle: "14-day batch cycles"
        output: "Smoked meats and by-products"
      - name: "Grain Milling" 
        capacity: "1-ton daily"
        yield: "80%"
      - name: "Fruit Processing"
        seasonal: "15K lb capacity"
        output: "11,250 jars"
      - name: "Baking"
        daily: "1K+ units"
        batches: 10
      - name: "Expanded Canning"
        compliance: "HACCP"
        products: ["peppers", "tomatoes", "onions", "garlic", "sauces"]
      - name: "Counter Sales"
        operations: ["retail", "wholesale"]
        
  simulation:
    mesa_abm: "Agent-Based Modeling framework"
    system_dynamics: "Economic flow modeling"
    discrete_event: "Event-driven simulation"
    
  hardware:
    gpu: "NVIDIA GeForce RTX 3080"
    memory: "10GB VRAM"
    optimization: "CUDA acceleration"
    
  models:
    local_ollama:
      primary: "qwen2.5-coder:7b"
      backup: ["llama3.2:1b", "qwen3:8b"]
      purpose: "Local inference without external APIs"

# Task Interpretation Guidelines
task_interpretation:
  evolutionary_terms:
    "evo": "evolutionary algorithms, NOT EVE Online video game"
    "evolution": "genetic algorithm optimization"
    "fitness": "performance metric for neural networks"
    "generation": "iteration of evolutionary process"
    "mutation": "parameter modification in neural networks"
    "selection": "choosing best performing agents"
    
  system_terms:
    "handoff": "task transfer between agents"
    "A2A": "Agent-to-Agent communication protocol"
    "orchestration": "multi-agent coordination"
    "workflow": "production process in bakery simulation"
    "simulation": "economic modeling of rural food production"

# Common Task Types
task_types:
  system_validation:
    description: "Test system components and integration"
    example_prompts: ["evo start test", "system check", "validation run"]
    expected_output: "Technical checklist for system verification"
    
  workflow_optimization:
    description: "Improve bakery production efficiency"
    example_prompts: ["optimize production", "improve workflow", "reduce costs"]
    expected_output: "Production optimization recommendations"
    
  agent_coordination:
    description: "Manage multi-agent interactions"
    example_prompts: ["coordinate agents", "A2A messaging", "handoff tasks"]
    expected_output: "Agent communication and task distribution plan"

# Response Format Guidelines
response_format:
  checklist_structure:
    - "Use numbered steps (1, 2, 3...)"
    - "Include validation checkpoints every 3-5 steps"
    - "Add time estimates and resource requirements"
    - "Specify success criteria for each step"
    - "Include fitness validation (>70%) where applicable"
    
  technical_focus:
    - "Focus on RIPER-Œ© system components"
    - "Reference actual workflow names and parameters"
    - "Include GPU optimization considerations"
    - "Mention A2A communication protocols"
    - "Consider cache compliance (D: drive)"

# Prohibited Interpretations
avoid_confusion:
  eve_online:
    description: "EVE Online is a space MMO video game"
    not_related_to: "RIPER-Œ© evolutionary algorithms"
    if_mentioned: "Clarify this is about evolutionary algorithms, not gaming"
    
  generic_gaming:
    avoid_terms: ["game client", "character creation", "ship management"]
    instead_use: ["system initialization", "agent creation", "resource management"]

# Example Correct Interpretations
examples:
  input: "Simple evo start test"
  correct_interpretation: "Evolutionary algorithm system initialization test"
  expected_output: "Checklist for starting and validating evolutionary optimization"
  
  input: "A2A handoff validation"
  correct_interpretation: "Agent-to-Agent communication handoff testing"
  expected_output: "Steps to verify inter-agent message passing"
  
  input: "Workflow optimization"
  correct_interpretation: "Bakery production workflow efficiency improvement"
  expected_output: "Production optimization checklist with metrics"

# System Status Keywords
status_indicators:
  success: ["‚úÖ", "PASSED", "operational", "successful"]
  warning: ["‚ö†Ô∏è", "WARNING", "attention needed"]
  error: ["‚ùå", "ERROR", "FAILED", "critical"]
  progress: ["üîÑ", "IN PROGRESS", "running", "processing"]
